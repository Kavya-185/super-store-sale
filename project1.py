# -*- coding: utf-8 -*-
"""project1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AcAR3Et6bC2mo8WfIfgyKlIPdxCLQiOH

PROJECT 1
"""

import pandas as pd
df=pd.read_csv('https://raw.githubusercontent.com/leonism/sample-superstore/refs/heads/master/data/superstore.csv')
df

df.head()

df.info()

df.shape

missing_percent = df.isnull().sum() * 100 / len(df)
missing_percent

mode_postal_code = df['Postal Code'].mode()[0]
df['Postal Code'].fillna(mode_postal_code, inplace=True)
print("\nMissing percentages after filling:\n", df.isnull().sum() * 100 / len(df))
print("\nInfo after filling missing values:\n")
df.info()

df['Postal Code'] = df['Postal Code'].astype(str)
display(df)

df_cleaned = df.drop_duplicates()
df_cleaned

"""Exploratory data analysis"""

total_sales = df['Sales'].sum()
total_oridners = df['Order ID'].nunique()
total_profit = df['Profit'].sum()
print("Total Sales:", total_sales)
print("Total Orders:", total_oridners)
print("Total Profit:", total_profit)

result = df.groupby('Order ID')['Sales'].sum().mean()
print(result)

#Which product has highest sales? which has highest profit?
product_sales = df.groupby('Product Name')['Sales'].sum()
product_profit = df.groupby('Product Name')['Profit'].sum()
product_sales
product_profit

#which product category(furniture, technology, office supplies) is the most profitable
category_profit = df.groupby('Category')['Profit'].sum()
category_profit

#which region has highest sales? which has highest profit margin?
region_sales = df.groupby('Region')['Sales'].sum()
region_profit = df.groupby('Region')['Profit'].sum()
region_sales
region_profit

#which city is the top contributor to sales
city_sales = df.groupby('City')['Sales'].sum()
city_sales

avg_orders_per_customer = df.groupby('Customer ID')['Order ID'].nunique().mean()
avg_orders_per_customer

top_customers = df.groupby('Customer ID')['Sales'].sum().nlargest(5)
top_customers

avg_discount = df.groupby('Category')['Discount'].mean()
avg_discount

df['Profit Margin'] = df['Profit'] / df['Sales']
lowest_profit_margin = df.groupby('Sub-Category')['Profit Margin'].mean().idxmin()
lowest_profit_margin